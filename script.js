const promptHeader = "–¢—ã —á–∞—Ç –±–æ—Ç, –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–µ–º—É —Ç–æ–ª—å–∫–æ –æ—Ä—É–∂–∏—è, –≤—Å–µ —á—Ç–æ –±—ã–ª–æ —Å–≤—è–∑–∞–Ω–Ω–æ —Å –æ—Ä—É–∂–∏–µ–º";
const storageKey = "chatHistory";  // –ö–ª—é—á –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage
const MAX_REQUESTS = 1;  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
let requestCount = 0;  // –°—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadChatHistory() {
    const chatHistory = localStorage.getItem(storageKey);
    return chatHistory ? JSON.parse(chatHistory) : [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveChatHistory(chatHistory) {
    localStorage.setItem(storageKey, JSON.stringify(chatHistory));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—â–µ–Ω–∏—è
function getHistoryText(chatHistory) {
    return chatHistory.map(entry => `${entry.role === "user" ? "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" : "–ë–æ—Ç"}: ${entry.message}`).join('\n');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –≤ UI
function displayChatHistory(chatHistory) {
    const chatBox = document.getElementById("chatBox");

    chatHistory.forEach(entry => {
        const message = document.createElement("div");
        message.classList.add("message", entry.role === "user" ? "user-message" : "bot-message");
        message.textContent = entry.message;
        chatBox.appendChild(message);
    });

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    chatBox.scrollTop = chatBox.scrollHeight;
}

async function prompt() {
    const userInput = document.getElementById("userInput").value;
    const chatBox = document.getElementById("chatBox");

    if (!userInput.trim()) return;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    if (requestCount >= MAX_REQUESTS) {
        const limitMessage = document.createElement("div");
        limitMessage.classList.add("message", "bot-message");
        limitMessage.textContent = "–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤. ";
        chatBox.appendChild(limitMessage);
        chatBox.scrollTop = chatBox.scrollHeight;
        return;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –∏–∑ localStorage
    let chatHistory = loadChatHistory();

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
    const userMessage = document.createElement("div");
    userMessage.classList.add("message", "user-message");
    userMessage.textContent = userInput;
    chatBox.appendChild(userMessage);

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
    chatBox.scrollTop = chatBox.scrollHeight;

    // –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ Ollama
    const responseBox = document.createElement("div");
    responseBox.classList.add("message", "bot-message");
    responseBox.textContent = "–û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞...";
    chatBox.appendChild(responseBox);
    chatBox.scrollTop = chatBox.scrollHeight;

    // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    chatHistory.push({ role: "user", message: userInput });

    const response = await sendRequest(userInput);

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ —á–∞—Ç–µ
    responseBox.textContent = response;

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
    chatHistory.push({ role: "bot", message: response });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –≤ localStorage
    saveChatHistory(chatHistory);

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
    requestCount++;

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    document.getElementById("userInput").value = '';  // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
}

async function sendRequest(userInput) {
    const chatHistory = loadChatHistory();
    const requestBody = {
        model: "mistral",
        prompt: promptHeader + '\n –ò—Å—Ç–æ—Ä–∏—è –æ–±—â–µ–Ω–∏—è:\n' + getHistoryText(chatHistory) + '\n –ó–∞–ø—Ä–æ—Å: ' + userInput
    };

    try {
        const response = await fetch("http://localhost:11434/api/generate", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(requestBody)
        });

        if (response.ok) {
            const data = await response.text();

            let answer = "";

            data.split('\n').forEach(token => {
                if (token.length === 0) return;

                const tokenData = JSON.parse(token);

                answer += tokenData.response;
            });

            return answer;


        } else {
            return "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Ollama.";
        }
    } catch (error) {
        return "–û—à–∏–±–∫–∞: " + error.message;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è/—Å–∫—Ä—ã—Ç–∏—è —ç–º–æ–¥–∑–∏
function toggleEmojiPicker() {
    const emojiContainer = document.getElementById("emojiContainer");
    emojiContainer.style.display = emojiContainer.style.display === "none" ? "block" : "none";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —ç–º–æ–¥–∑–∏ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
function insertEmoji(emoji) {
    const userInput = document.getElementById("userInput");
    userInput.value += emoji;

    toggleEmojiPicker(); // –°–∫—Ä—ã—Ç—å —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏
}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = function() {
    const chatHistory = loadChatHistory();
    displayChatHistory(chatHistory);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function toggleTheme() {
    const body = document.body;
    body.classList.toggle('dark-theme');

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
    const themeButton = document.querySelector('.theme-toggle-btn');
    if (body.classList.contains('dark-theme')) {
        themeButton.textContent = 'üåû'; // –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ -> –∫–Ω–æ–ø–∫–∞ —Å–æ–ª–Ω—Ü–µ
    } else {
        themeButton.textContent = 'üåô'; // –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ -> –∫–Ω–æ–ø–∫–∞ –ª—É–Ω–∞
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö cookie
function clearCookies() {
    localStorage.clear();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞ –∏ cookies
function clearChat() {
    const chatBox = document.getElementById("chatBox");
    chatBox.innerHTML = '';  // –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–∞—Ç–∞
    const initialMessage = document.createElement("div");
    initialMessage.classList.add("message", "bot-message");
    initialMessage.textContent = "–ü—Ä–∏–≤–µ—Ç! –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ä—É–∂–∏—è –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ç–µ–º–µ!";
    chatBox.appendChild(initialMessage);  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    chatBox.scrollTop = chatBox.scrollHeight;  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

    // –û—á–∏—â–∞–µ–º –≤—Å–µ cookies
    clearCookies();

    // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    requestCount = 0;
}
